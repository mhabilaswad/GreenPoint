"use client";

import { useState } from "react";

export default function SimpleUploadTest() {
  const [file, setFile] = useState<File | null>(null);
  const [prediction, setPrediction] = useState<string | null>(null);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState<string | null>(null);

  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    if (e.target.files && e.target.files[0]) {
      setFile(e.target.files[0]);
      setPrediction(null);
      setError(null);
    }
  };

  const handleUpload = async () => {
    if (!file) {
      setError("Please select an image first.");
      return;
    }

    setLoading(true);
    setPrediction(null);
    setError(null);

    try {
      const formData = new FormData();
      formData.append("file", file);

      const res = await fetch("https://greenpoint-cnn-model-production.up.railway.app/predict", {
        method: "POST",
        body: formData,
      });

      if (!res.ok) {
        const errData = await res.json();
        throw new Error(errData.message || "Prediction API error");
      }

      const data = await res.json();
      // Contoh response: { class: "1", confidence: 0.87 }
      setPrediction(`Predicted Class: ${data.class}, Confidence: ${(data.confidence * 100).toFixed(2)}%`);
    } catch (err: any) {
      setError(err.message || "Unknown error");
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="container mx-auto p-8 max-w-md">
      <h1 className="text-2xl font-bold mb-4">Test Upload & Predict</h1>

      <input type="file" accept="image/*" onChange={handleFileChange} className="mb-4" />

      <button
        onClick={handleUpload}
        disabled={loading}
        className="bg-blue-600 text-white px-4 py-2 rounded disabled:opacity-50"
      >
        {loading ? "Predicting..." : "Upload & Predict"}
      </button>

      {prediction && (
        <div className="mt-4 p-4 bg-green-100 text-green-800 rounded">
          <strong>Result:</strong> {prediction}
        </div>
      )}

      {error && (
        <div className="mt-4 p-4 bg-red-100 text-red-800 rounded">
          <strong>Error:</strong> {error}
        </div>
      )}
    </div>
  );
}
